jQuery(document).ready(function() {
  if ($("#ctrllr-notes").length > 0){
    if($("#notes-edit").length > 0){   
      var DialogEntityText = function(title, names, action){
        this.container = "#entity_text";
        this.f = {names: "#entity_text-name", title: "#entity_text-title"};
        this.b = {save: "#entity_text-save"};
        this.setTitle = function(title){
          $(this.f.title).html(title);
        };
        this.setNames = function(names){
          $(this.f.names).val(names);
        };
        this.clear = function(){
          $(this.f.names).val("");
        };
        this.close = function(){
          $(this.container).modal("hide");
        };
        this.bind_save = function(){
          var el = this;
          $(this.b.save).off();
          $(this.b.save).on("click", function(){
            if(el.action_save != undefined)
              el.action_save($(el.f.names).val());
          });
        };
        this.show = function(){
          $(this.container).modal();
          $(this.f.names).focus();
        };

        //constructor
        this.setTitle(title);
        this.setNames(names);
        this.action_save = action;
        this.bind_save();
      };

      var container_folder = {id:"#folder_id", text: "#folder_text"};
      var url_find_receipt = $("#entities_to_ids").data("url");
      var real_input_token_from = "#token-input-entities_from_ids";
      var real_input_token_to = "#token-input-entities_to_ids";

      $("#entities_to_ids").tokenInput(url_find_receipt, {
        theme: 'facebook',
        //prePopulate: $("#entities_to_ids").data("pre"),
        preventDuplicates: true,
        minChars: "3",
        resultsFormatter: function(entity){
          var e = new EntityJson(entity);          
          return "<li> <p style='color: black' >" + e.fullEntityName() + " </p> </li>"; 
        },
        tokenFormatter: function(entity) {
          var e = new EntityJson(entity);          
          return "<li><p>" + e.fullEntityName().substring(0,40) + "</p> </li>" 
        },
        onResult: function(item){
          console.log(item);
          return item;
        },
        noResultsText: "<%= I18n.t('token_input.noResultsText') %>",
        hintText: "<%= I18n.t('token_input.hintText')%>",
        searchigText: "<%= I18n.t('token_input.searching_text')%>",              
      });
      $("#token-input-entities_to_ids").on("keyup", function(e){
        if(e.keyCode==9){
          $("#token-input-entities_from_ids").focus();
        }
      });
      var url_find_sender = $("#entities_from_ids").data("url");
      $("#entities_from_ids").tokenInput(url_find_sender, {
        theme: 'facebook',
        //tokenLimit: "1",
        preventDuplicates: true,
        minChars: "3",
        resultsFormatter: function(entity){
          var e = new EntityJson(entity);          
          return "<li> <p style='color: black' >" + e.fullEntityName() + " </p> </li>"; 
        },
        tokenFormatter: function(entity) {
          var e = new EntityJson(entity);          
          return "<li><p>" + e.fullEntityName().substring(0,40) + "</p> </li>" 
        },
        noResultsText: "<%= I18n.t('token_input.noResultsText') %>",
        hintText: "<%= I18n.t('token_input.hintText')%>",
        searchigText: "<%= I18n.t('token_input.searching_text')%>",              
      });
      $("#token-input-entities_from_ids").on("keyup", function(e){
        if(e.keyCode==9){
          $("#note_description").focus();
        }
      });
          
      
      $(real_input_token_from).on("keyup", function(event){
        if (event.keyCode == 45) {//key insert
          var dialog_from = new DialogEntityText("Agregar Remitente", $("#note_sender_text").val(), function(data){
            if (data.length > 0){
              var simulateEntity = {
                id: -10,
                person: {id: -10, firstname: data, lastname: ""}
              };
              $("#entities_from_ids").tokenInput("add", simulateEntity);
              $("#note_sender_text").val(data)
            };
            dialog_from.clear();
            dialog_from.close();    
          });
          dialog_from.show();
          event.preventDefault();
        }
      });

      
      $(real_input_token_to).on("keyup", function(event){
        if (event.keyCode == 45) {//key insert
          var dialog_to = new DialogEntityText("Agregar Destinatario", $("#note_recipient_text").val(), function(data){
            if (data.length > 0){
              var simulateEntity = {
                id: -20,
                person: {id: -20, firstname: data, lastname: ""}
              }
              $("#entities_to_ids").tokenInput("add", simulateEntity);
              $("#note_recipient_text").val(data)
            };
            dialog_to.clear();
            dialog_to.close();    
          });
          dialog_to.show();
          event.preventDefault();
        }
      });

      /*Seleccion de carpeta*/
      $("#folder-tree").fancytree({
        lazy: true,
        expanded: true,
        //checkbox: true,
        selectMode: 1,
        source: $.ajax({
          url: "/folders",
          dataType: "json"
        }),
        lazyLoad: function(event, data){
          var node = data.node;
          // Issue an ajax request to load child nodes
          data.result = {
            url: "/folders.json",
            data: {id: node.key}
          }
        },
        activate: function(event, data) {
          if(data.node.folder){
            $(container_folder.id).val(data.node.key); 
            var parents = data.node.getParentList();
            var p = "";
            for(var i = 1; i < parents.length; i++){
              p += '<li> <span class="divider"></span>';
              p += parents[i].title + '</li>';
            }
            p += '<li> <span class="divider"></span>';
            p += data.node.title + '</li>';
            $(container_folder.text).html(p);
          }
        },
      });

      //si es edit y tiene recipients mostrarlo
      var d = $("#entities_to_ids").data("select");
      if(d){
        for(var i = 0; i < d.length; i++)
          $("#entities_to_ids").tokenInput("add",new EntityJson(d[i]));
      }
      //si es edit y tiene senders mostrarlo      
      d = $("#entities_from_ids").data("select");
      if(d){
        for(var i = 0; i < d.length; i++)
          $("#entities_from_ids").tokenInput("add",new EntityJson(d[i]));
      }
    }

    /*#######################################################
      ####################  LISTAR NOTAS          ###########
      #######################################################*/
    if ($("#note-index").length > 0){
      var table = $('#note-index-table').dataTable({
        "processing": true,
        "serverSide": true,
        "ajax": $('#note-index-table').data('source'),
        "pagingType": "full_numbers",
         aoColumnDefs: [{ 'bSortable': false, 'aTargets': [  1, 2, 4, 5 ] }],
        language: {
            url: "/datatables/spanish.txt",
        }
      });
    }
  }
});
