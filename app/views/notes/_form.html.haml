= form_for(@note, html: { "data-parsley-validate" => '', id: "document_form" , multipart: true }) do |f|
  - if @note.errors.any? 
    #error_explanation
      %h2
        = pluralize(@note.errors.count, "error")
        prohibited this note from being saved:

      %ul
      - @note.errors.full_messages.each do |message|
        %li= message

  = hidden_field :note, :direction
  = hidden_field :note, :folder_id, id: "folder_id"
  = hidden_field :note, :recipient_text
  = hidden_field :note, :sender_text
  = hidden_field_tag "note[create_user_id]", @temporary_note.create_user.id if @temporary_note.present?
  = hidden_field_tag :temporary_note_id, @temporary_note.id if @temporary_note.present?

  - if @note.senders.count > 0 || ! @temporary_note.present?
    - data_senders = entities_data_pre(@note.senders)
  - else
    - data_senders = entities_data_pre(@temporary_note.senders)
  - if @note.recipients.count > 0 || ! @temporary_note.present?
    - data_recipients = entities_data_pre(@note.recipients)
  - else
    - data_recipients = entities_data_pre(@temporary_note.recipients)
  %fieldset
    .field
      %label{for: "entities_from_ids"}= t("labels.entities_from_ids")
      %input#entities_from_ids{type: "text", name: "entities_from_ids", data: {url: "#{entities_path(format: :json)}"}, 'data-select'=> data_senders , 'data-parsley-group' => 'block_document', required: ''}
      %p.help-block= t('help.keyboard.sender_text')
    .field
      %label{for: "entities_to_ids"}= t("labels.entities_to_ids")
      %input#entities_to_ids{type: "text", name: "entities_to_ids", data: {url: "#{entities_path(format: :json)}"}, 'data-select'=> data_recipients ,'data-parsley-group' => 'block_document', required: ''}
      %p.help-block= t('help.keyboard.receipt_text')
  %fieldset
    .field
      = f.label :description, t("labels.description")
      = f.text_field :description,{'data-parsley-group' => 'block_document', required: ''}
    .field
      = f.label :observation, t("labels.observation")
      = f.text_area :observation, {class: "form-control"}
    .field
      = f.label :reference_people, t("labels.reference_people")
      = f.text_field :reference_people
  .row
    .col-md-4
      .field
        = f.label :emission_date, t("labels.emission_date")
        = f.date_field :emission_date, {'data-parsley-group' => 'block_document', required: '', 'parsley-type' => 'dateIso'}
    .col-md-4
      .field
        = f.label :system_status, t("labels.system_status")
        = f.select :system_status, options_for_select(optSel_SystemStatus, @note.system_status)
  %fieldset
    %legend= t("labels.attachments")
    .row
      .col-md-12
        .field
          %input#attachments.form-control{type: 'file', name: "attachments[]", multiple: true}
          %span.help-block
            = t('labels.help_file_multiple_upload')
    - unless @note.attachments.blank?
      .panel.panel-default
        .panel-heading= t('documents.attachments.select_remove')
        .panel-body
          .row
            .col-md-12
              - @note.attachments.each do |attachment|
                .col-md-3
                  %label
                    %input{type: 'checkbox', name: 'attachments_destroy[]', value: "#{attachment.id}" }
                    = attachment.filedoc.file.filename
    
  %br
  %br
  .action_container.text-center
    = f.submit t('buttons.accept'), {:class=>"btn-confirm"}

= render 'entity_text'
